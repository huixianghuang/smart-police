server.port=8999
# 数据库访问配置，此处使用postgres为例。
# 主数据源，默认的
spring.datasource.primary.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.secondary.type=com.alibaba.druid.pool.DruidDataSource

spring.datasource.primary.driverClassName=org.postgresql.Driver
spring.datasource.primary.url=jdbc:postgresql://localhost/police
spring.datasource.primary.username=postgres
spring.datasource.primary.password=root

spring.datasource.secondary.driverClassName=org.postgresql.Driver
spring.datasource.secondary.url=jdbc:postgresql://localhost/police_prevention
spring.datasource.secondary.username=postgres
spring.datasource.secondary.password=root

spring.jpa.primary.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.secondary.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL94Dialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL94Dialect
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大

spring.datasource.primary.initialSize=5
spring.datasource.primary.minIdle=5
spring.datasource.primary.maxActive=10
# 配置获取连接等待超时的时间
spring.datasource.primary.maxWait=60000

spring.datasource.secondary.max-idle=10
spring.datasource.secondary.max-wait=60000
spring.datasource.secondary.min-idle=5
spring.datasource.secondary.initial-size=5

spring.jpa.primary.hibernate.ddl-auto=update
spring.jpa.secondary.hibernate.ddl-auto=update
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.primary.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.primary.minEvictableIdleTimeMillis=300000
# Oracle请使用select 1 from dual
spring.datasource.primary.validationQuery=SELECT 'x'
spring.datasource.primary.testWhileIdle=true
spring.datasource.primary.testOnBorrow=false
spring.datasource.primary.testOnReturn=false

# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.secondary.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.secondary.minEvictableIdleTimeMillis=300000
# Oracle请使用select 1 from dual
spring.datasource.secondary.validationQuery=SELECT 'x'
spring.datasource.secondary.testWhileIdle=true
spring.datasource.secondary.testOnBorrow=false
spring.datasource.secondary.testOnReturn=false

# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.primary.poolPreparedStatements=true
spring.datasource.primary.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.primary.filters=stat,wall,slf4j

# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.secondary.poolPreparedStatements=true
spring.datasource.secondary.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.secondary.filters=stat,wall,slf4j

logging.level.org.springframework.web=DEBUG
logging.config=classpath:logback.xml
logging.path=./police/log.log